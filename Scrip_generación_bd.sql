-- MySQL Script generated by MySQL Workbench
-- Wed Oct 11 20:46:31 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema clinicapediatra
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema clinicapediatra
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `clinicapediatra` DEFAULT CHARACTER SET utf8 ;
USE `clinicapediatra` ;

-- -----------------------------------------------------
-- Table `clinicapediatra`.`PRODUCTOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`PRODUCTOS` (
  `idPRODUCTOS` INT NOT NULL,
  `NOMBRE_PRODUC` VARCHAR(45) NOT NULL,
  `DESCRIPCION_PRODUC` VARCHAR(45) NOT NULL,
  `CANTIDAD` INT NOT NULL,
  `VALOR_UNITARIO` INT NOT NULL,
  PRIMARY KEY (`idPRODUCTOS`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`TRATAMIENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`TRATAMIENTO` (
  `idTRATAMIENTO` INT NOT NULL,
  `NOMBRE_TRATA` VARCHAR(45) NOT NULL,
  `DESCRIPCION_TRATA` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTRATAMIENTO`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`DIAGNOSTICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`DIAGNOSTICO` (
  `idDIAGNOSTICO` INT NOT NULL,
  `NOMBRE_DIAG` VARCHAR(45) NOT NULL,
  `DESCRIPCION_DIAG` VARCHAR(45) NOT NULL,
  `TRATAMIENTO_idTRATAMIENTO` INT NOT NULL,
  PRIMARY KEY (`idDIAGNOSTICO`),
  INDEX `fk_DIAGNOSTICO_TRATAMIENTO_idx` (`TRATAMIENTO_idTRATAMIENTO` ASC),
  CONSTRAINT `fk_DIAGNOSTICO_TRATAMIENTO`
  FOREIGN KEY (`TRATAMIENTO_idTRATAMIENTO`)
  REFERENCES `clinicapediatra`.`TRATAMIENTO` (`idTRATAMIENTO`)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `clinicapediatra`.`TIPO_USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`TIPO_USUARIO` (
  `idTipo_Usuario` INT NOT NULL,
  `Nombre_UT` VARCHAR(45) NOT NULL,
  `Descripcion_Permisos` VARCHAR(100) NOT NULL,
  PRIMARY KEY (`idTipo_Usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`PACIENTE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`PACIENTE` (
  `NUIP` INT NOT NULL,
  `Nombre_paciente` VARCHAR(45) NOT NULL,
  `Email` VARCHAR(45) NOT NULL,
  `Telefono_Movil` INT NOT NULL,
  `Telefono_fijo` INT NULL,
  `Departamento` VARCHAR(45) NOT NULL,
  `Municipio` VARCHAR(45) NOT NULL,
  `Direccion` VARCHAR(200) NOT NULL,
  `Fecha_Nacimiento` DATE NOT NULL,
  `Lugar_Nacimiento` VARCHAR(45) NOT NULL,
  `Estado_Civil` VARCHAR(45) NOT NULL,
  `Tipo_Sangre` VARCHAR(5) NOT NULL,
  `Genero` TINYINT(1) NOT NULL,
  `Alergias` VARCHAR(150) NULL,
  `Obs_Clinicas` VARCHAR(45) NULL,
  `Cotizante` TINYINT(1) NULL,
  PRIMARY KEY (`NUIP`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`USUARIO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`USUARIO` (
  `idUsuario` INT NOT NULL,
  `Nombre_Usuario` VARCHAR(45) NOT NULL,
  `Hast` VARCHAR(45) NOT NULL,
  `Salt` VARCHAR(45) NULL,
  `Estado_Usuario` VARCHAR(45) NOT NULL,
  `TIPO_USUARIO_idTipo_Usuario` INT NOT NULL,
  `PACIENTE_NUIP` INT NOT NULL,
  PRIMARY KEY (`idUsuario`),
  INDEX `fk_USUARIO_TIPO_USUARIO_idx` (`TIPO_USUARIO_idTipo_Usuario` ASC),
  INDEX `fk_USUARIO_PACIENTE_idx` (`PACIENTE_NUIP` ASC),
  CONSTRAINT `fk_USUARIO_TIPO_USUARIO`
    FOREIGN KEY (`TIPO_USUARIO_idTipo_Usuario`)
    REFERENCES `clinicapediatra`.`TIPO_USUARIO` (`idTipo_Usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIO_PACIENTE`
    FOREIGN KEY (`PACIENTE_NUIP`)
    REFERENCES `clinicapediatra`.`PACIENTE` (`NUIP`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`HISTORIAL_CLINICO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`HISTORIAL_CLINICO` (
  `idHISTORIAL_CLINICO` INT NOT NULL,
  `FECHA_FORM` DATE NOT NULL,
  `DESCRIPCION_HISTO` VARCHAR(45) NOT NULL,
  `USUARIO_DOCUMENTO_IDENTIDAD` INT NOT NULL,
  `DIAGNOSTICO_idDIAGNOSTICO` INT NOT NULL,
  `USUARIO_idUsuario` INT NOT NULL,
  PRIMARY KEY (`idHISTORIAL_CLINICO`),
  INDEX `fk_HISTORIAL_CLINICO_DIAGNOSTICO_idx` (`DIAGNOSTICO_idDIAGNOSTICO` ASC),
  INDEX `fk_HISTORIAL_CLINICO_USUARIO_idx` (`USUARIO_idUsuario` ASC),
  CONSTRAINT `fk_HISTORIAL_CLINICO_DIAGNOSTICO`
    FOREIGN KEY (`DIAGNOSTICO_idDIAGNOSTICO`)
    REFERENCES `clinicapediatra`.`DIAGNOSTICO` (`idDIAGNOSTICO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_HISTORIAL_CLINICO_USUARIO`
    FOREIGN KEY (`USUARIO_idUsuario`)
    REFERENCES `clinicapediatra`.`USUARIO` (`idUsuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`TIPO_TRATAMIENTO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`TIPO_TRATAMIENTO` (
  `idTIPO_TRATAMIENTO` INT NOT NULL,
  `DESCRIPCION_TIPO_TRA` VARCHAR(45) NULL,
  `TRATAMIENTO_idTRATAMIENTO` INT NOT NULL,
  PRIMARY KEY (`idTIPO_TRATAMIENTO`),
  INDEX `fk_TIPO_TRATAMIENTO_TRATAMIENTO_idx` (`TRATAMIENTO_idTRATAMIENTO` ASC),
  CONSTRAINT `fk_TIPO_TRATAMIENTO_TRATAMIENTO`
    FOREIGN KEY (`TRATAMIENTO_idTRATAMIENTO`)
    REFERENCES `clinicapediatra`.`TRATAMIENTO` (`idTRATAMIENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`PROFESIONAL`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`PROFESIONAL` (
  `idPROFESIONAL` INT NOT NULL,
  `NOMBRE_PRO` VARCHAR(45) NOT NULL,
  `TELEFONO_CELULAR_PRO` VARCHAR(45) NOT NULL,
  `EMAIL_PRO` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idPROFESIONAL`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`ESPECIALIDAD`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`ESPECIALIDAD` (
  `idESPECIALIDAD` INT NOT NULL,
  `NOMBRE_ESPEC` VARCHAR(45) NOT NULL,
  `DESCIPCION_ESPEC` VARCHAR(45) NOT NULL,
  `PROFESIONAL_idPROFESIONAL` INT NOT NULL,
  PRIMARY KEY (`idESPECIALIDAD`),
  INDEX `fk_ESPECIALIDAD_PROFESIONAL_idx` (`PROFESIONAL_idPROFESIONAL` ASC),
  CONSTRAINT `fk_ESPECIALIDAD_PROFESIONAL`
    FOREIGN KEY (`PROFESIONAL_idPROFESIONAL`)
    REFERENCES `clinicapediatra`.`PROFESIONAL` (`idPROFESIONAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`CIRUGIA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`CIRUGIA` (
  `idCIRUGIA` INT NOT NULL,
  `NOMBRE_CIRU` VARCHAR(45) NOT NULL,
  `DESCRIPCION_CIRU` VARCHAR(45) NOT NULL,
  `TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO` INT NOT NULL,
  `PROFESIONAL_idPROFESIONAL` INT NOT NULL,
  PRIMARY KEY (`idCIRUGIA`),
  INDEX `fk_CIRUGIA_TIPO_TRATAMIENTO_idx` (`TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO` ASC),
  INDEX `fk_CIRUGIA_PROFESIONAL_idx` (`PROFESIONAL_idPROFESIONAL` ASC),
  CONSTRAINT `fk_CIRUGIA_TIPO_TRATAMIENTO`
    FOREIGN KEY (`TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO`)
    REFERENCES `clinicapediatra`.`TIPO_TRATAMIENTO` (`idTIPO_TRATAMIENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CIRUGIA_PROFESIONAL`
    FOREIGN KEY (`PROFESIONAL_idPROFESIONAL`)
    REFERENCES `clinicapediatra`.`PROFESIONAL` (`idPROFESIONAL`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`TIPO_TRATAMIENTO_has_PRODUCTOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`TIPO_TRATAMIENTO_has_PRODUCTOS` (
  `TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO` INT NOT NULL,
  `PRODUCTOS_idPRODUCTOS` INT NOT NULL,
  PRIMARY KEY (`TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO`, `PRODUCTOS_idPRODUCTOS`),
  INDEX `fk_TIPO_TRATAMIENTO_has_PRODUCTOS_PRODUCTOS_idx` (`PRODUCTOS_idPRODUCTOS` ASC),
  INDEX `fk_TIPO_TRATAMIENTO_has_PRODUCTOS_TIPO_TRATAMIENTO_idx` (`TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO` ASC),
  CONSTRAINT `fk_TIPO_TRATAMIENTO_has_PRODUCTOS_TIPO_TRATAMIENTO`
    FOREIGN KEY (`TIPO_TRATAMIENTO_idTIPO_TRATAMIENTO`)
    REFERENCES `clinicapediatra`.`TIPO_TRATAMIENTO` (`idTIPO_TRATAMIENTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TIPO_TRATAMIENTO_has_PRODUCTOS_PRODUCTOS`
    FOREIGN KEY (`PRODUCTOS_idPRODUCTOS`)
    REFERENCES `clinicapediatra`.`PRODUCTOS` (`idPRODUCTOS`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinicapediatra`.`BENEFICIARIOS`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinicapediatra`.`BENEFICIARIOS` (
  `NUIP` INT NOT NULL,
  `PACIENTE_NUIP` INT NOT NULL,
  PRIMARY KEY (`NUIP`),
  INDEX `fk_BENEFICIARIOS_PACIENTE_idx` (`PACIENTE_NUIP` ASC),
  CONSTRAINT `fk_BENEFICIARIOS_PACIENTE`
    FOREIGN KEY (`PACIENTE_NUIP`)
    REFERENCES `clinicapediatra`.`PACIENTE` (`NUIP`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
